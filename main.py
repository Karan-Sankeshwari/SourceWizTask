"""create_excel_file.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11NqaM2qC8u9MXj8W2BWBS36Ud0Lp5yOY
"""
import pandas as pd
from fpdf import FPDF


def convert_excel_data_to_dictionary(data):
    keys = data.columns
    data_dict = []
    for value in data.values:
        temp_obj = {}
        for i, j in zip(keys, value):
            temp_obj[i] = str(j)
        data_dict.append(temp_obj)
    return data_dict


def create_pdf_data(user_data):
    emp_data = user_data['employee_info']
    job_data = user_data['job_info']
    emergency_data = user_data['emergency_info']
    dependent_data = user_data['dependent_info']
    string_data = f'''
Basic Employment Information Sheet
Employee Information 
Full Name: {emp_data['Full_Name']}
Address: {emp_data['Address']}
Home Phone: ({emp_data['Area_code']}) {emp_data['Phone_number']}            Cell Phone: ({emp_data['Country_code']}) {emp_data['Mobile_Number']} 
Email Address: {emp_data['Email']}
Social Security Number or Government ID: {emp_data['SSN']}
Birth Date: {emp_data['Birth_Date'].split(' ')[0]}                 Marital Status: {emp_data['Marital_Status']}
Spouse's Name: {emp_data['Spouse_Name']}
Spouse's Employer:{emp_data['Spouse_employer']}                   Spouse's Work Phone: ({emp_data['Spouse_work_area_code']}) {emp_data['Spouse_work_phone']}
Job Information 
Title: {job_data['Title']}                     Supervisor: {job_data['Supervisor']} 
Work Location: {job_data['Work_Location']}                          E-mail Address: {job_data['Work_email']} 
Work Phone: ({job_data['Work_phone_area_code']}){job_data['Work_phone_number']}                   Cell Phone: ({job_data['Work_phone_country_code']} ) {job_data['Work_phone_number']}
Start Date: {job_data['Start_date']}                       Salary: $ {job_data['Salary']} 
Emergency Contact Information 
Full Name: {emergency_data['Full Name']} 
Address: {emergency_data['Address']} 
Primary Phone: ({emergency_data['Primary_phone_area_code']}) {emergency_data['Primary_phone_number']}               Cell Phone: ({emergency_data['Cell_country_code']}) {emergency_data['Cell_number']} 
Relationship: {emergency_data['Relationship']}
Dependent Information (For insurance purposes only) 
Name(s) of Dependent(s)             Relationship to Employee 
'''
    for dependent in dependent_data:
        string_data = string_data + f'''{dependent['Name_of_dependent']}                                                {dependent['Relation_to_employee']}\n'''
    return string_data


def search_for_user(index, emp_dict, job_dict, emergency_contact_dict, dependents_dict):
    user = emp_dict[index]
    full_name = user['Full_Name']
    dependents_for_user = []
    for value in dependents_dict:
        if full_name == value['Name_of_employee']:
            dependents_for_user.append(value)
    return {
        'employee_info': emp_dict[index],
        'job_info': job_dict[index],
        'emergency_info': emergency_contact_dict[index],
        'dependent_info': dependents_for_user
    }


def create_pdf_file(final_res, name_of_employee):
    pdf = FPDF()
    pdf.add_page()
    text2 = final_res.encode('latin-1', 'replace').decode('latin-1')
    text2 = text2.split('\n')
    string_to_bold = ['Employee Information ', 'Job Information ', 'Emergency Contact Information ',
                      'Dependent Information (For insurance purposes only) ']
    pdf.set_font('Arial', 'B', size=15)
    pdf.cell(200, 10, txt='Basic Employment Information Sheet', ln=1)
    for i in range(2, len(text2)):
        if text2[i] in string_to_bold:
            pdf.set_font('Arial', 'B', size=15)
        else:
            pdf.set_font('Arial', size=12)
        pdf.cell(200, 10, txt=text2[i],
                 ln=1)

    pdf.output(f'{name_of_employee}.pdf')


def create_pdf_from_excel(row, file):
    # reading data from excel file
    emp_info = pd.read_excel(file, sheet_name=0)
    emp_info_dict = convert_excel_data_to_dictionary(emp_info)
    job_info = pd.read_excel(file, sheet_name=1)
    job_info_dict = convert_excel_data_to_dictionary(job_info)
    emergency_contact_info = pd.read_excel(file, sheet_name=2)
    emergency_contact_info_dict = convert_excel_data_to_dictionary(emergency_contact_info)
    dependents_info = pd.read_excel(file, sheet_name=3)
    dependents_info_dict = convert_excel_data_to_dictionary(dependents_info)
    # pass row number from excel file to get data
    user_data = search_for_user(row, emp_info_dict, job_info_dict, emergency_contact_info_dict, dependents_info_dict)
    # name of pdf file
    name_of_employee = user_data['employee_info']['Full_Name']
    # if field empty/NA in sheet 1 [containing employee info] stop pdf file creation else move forward
    if 'nan' in list(user_data['employee_info'].values()):
        print('Required fields empty in excel file. Please enter all the values for fields in Sheet1 of data.xlsx')
    else:
        final_res = create_pdf_data(user_data)
        create_pdf_file(final_res, name_of_employee)


file_name = 'data.xlsx'
create_pdf_from_excel(0, file_name)


